///////////////////////////////////////////////////////////
//  PessoaFisica.cs
//  Implementation of the Class PessoaFisica
//  Generated by Enterprise Architect
//  Created on:      24-fev-2017 23:25:11
//  Original author: soare
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.ComponentModel.DataAnnotations;
using SisDec.Repository;
using System.ComponentModel;

namespace SisDec.Models
{
    public class Cliente
    {
        public int IdCliente { get; set; }

        [DisplayName("Tipo Pessoa")]
        public TipoPessoa tipoPessoa { get; set; }

        [Required]
        public string Nome { get; set; }

        [Required]
        public string Cpf { get; set; }

        public int Rg { get; set; }

        public string Bairro { get; set; }

        
        [Required(ErrorMessage = "O CEP deve ser informado.!")]
        public string Cep { get; set; }

        public string Complemento { get; set; }

        
        [RegularExpression(@"^ ([\w\.\-] +)@([\w\-] +)((\.(\w){2, 3})+)$", ErrorMessage = "O e-mail não é válido.")]
        [Required]
        public string Email { get; set; }

        public string Endereco { get; set; }

        public int Numero { get; set; }


        [Required]
        public string Telefone { get; set; }

        //Pessoa Juridica
        [DisplayName("Inscricao Municipal")]
        public string InscricaoMunicipal { get; set; }

        [Required]
        public string Cnpj { get; set; }
        //fim pessoa Juridica


        [DisplayName("Sexo")]
        public Sexo enumSexo { get; set; }


        [DisplayName("Cidade")]
        public Cidade objCidade { get; set; }


        public Cliente()
        {
            objCidade = new Cidade();
        }

        public Cliente BuscarPorIdJ(int idCliente)
        {
            return new RepositoryCliente().ClientePorIdJurica(idCliente);
        }

        public Cliente BuscarPorIdF(int idCliente)
        {
            return new RepositoryCliente().ClientePorIdFisica(idCliente);
        }

        public IList<Cliente> BuscarTodos()
        {
            return new RepositoryCliente().BuscarTodos();
        }

        public void Gravar()
        {
            RepositoryCliente repo = new RepositoryCliente();
            if (IdCliente == 0)
            {
                repo.Inserir(this);
            }
            else
            {
                repo.Update(this);
            }
        }


    }//end PessoaFisica

}//end namespace Model